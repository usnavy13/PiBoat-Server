name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for relay-server
        id: meta-relay
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/relay-server
          tags: |
            type=sha,prefix=,format=short
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push relay-server
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-relay.outputs.tags }}
          labels: ${{ steps.meta-relay.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for web-client
        id: meta-client
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/web-client
          tags: |
            type=sha,prefix=,format=short
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push web-client
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./web-client.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 